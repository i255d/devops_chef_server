{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "virtualMachineName": {
            "type": "string"
        },
        "virtualMachineSize" : {
            "type": "string",
            "allowedValues": [
                "Standard_DS11_v2",
                "Standard_DS12_v2",
                "Standard_DS13_v2",
                "Standard_DS14_v2",
                "Standard_DS15_v2"
            ]
        },
        "adminPassword": {
            "type": "string"
        },
        "DataDiskSizeGib" : {
            "type": "int",
            "defaultValue": 32,
            "allowedValues": [
                32,
                64,
                128,
                256,
                512,
                1000,
                2000,
                4000
            ]
        },
        "numberOfInstances": {
            "type": "int",
            "defaultValue": 1,
            "minValue": 1,
            "maxValue": 5,
            "metadata": {
                "description": "Number of VMs to deploy, limit 5 since this sample is using a single storage account"
            }
        },
        "availabilitySetName": {
            "type": "string",
            "defaultValue": null,
            "metadata": {
                  "description" : "This requires no value unless numberOfInstances has more that 1.  Default is null."
            }
        },
        "sublocation": {
            "type": "string",
            "metadata": {
                "description" : "This is accepting a group variable specific to the subscription"
            }
        },
        "networkrg":{
            "type": "string",
            "metadata": {
                "description" : "This is accepting a group variable specific to the subscription"
            }
        },
        "virtualnetwork":{
            "type": "string",
            "metadata": {
                "description" : "This is accepting a group variable specific to the subscription"
            }
        },
        "subnet": {
            "type": "string",
            "metadata": {
                "description" : "This is accepting a group variable specific to the subscription"
            }
        },
        "subscriptionid": {
            "type": "string",
            "metadata": {
                "description" : "This is accepting a group variable specific to the subscription"
            }
        },
        "tenantid": {
            "type": "string",
            "metadata": {
                "description" : "This is accepting a group variable specific to the subscription"
            }
        },
        "keyvaultrg": {
            "type": "string",
            "metadata": {
                "description": "This is accepting a group variable specific to the subscription"
            }
        },
        "keyvault": {
            "type": "string",
            "metadata": {
                "description": "This is accepting a group variable specific to the subscription"
            }
        },
        "secretdjuser": {
            "type": "string",
            "metadata": {
                "description": "This is accepting a group variable specific to the subscription"
            }
        },
        "secretdjss": {
            "type": "string",
            "metadata": {
                "description": "This is accepting a group variable specific to the subscription"
            }
        },
        "diagnosticstoragerg": {
            "type": "string",
            "metadata": {
                "description": "This is accepting a group variable specific to the subscription"
            }
        },
        "diagnosticstorage": {
            "type": "string",
            "metadata": {
                "description": "This is accepting a group variable specific to the subscription"
            }
        },
        "diagnosticsStorageAccountId": {
            "type": "string",
            "metadata": {
                "description": "This is accepting a group variable specific to the subscription"
            }
        },
        "siterecoveryrg": {
            "type": "string",
            "metadata": {
                "description": "This is accepting a group variable specific to the subscription"
            }
        },
        "siterecoveryname": {
            "type": "string", 
            "metadata": {
                "description": "This is accepting a group variable specific to the subscription"
            }
        },
        "omsrg": {
            "type": "string",
            "metadata": {
                "description": "This is accepting a group variable specific to the subscription"
            }
        },
        "omsworkspace": {
            "type": "string",
            "metadata": {
                "description": "This is accepting a group variable specific to the subscription"
            }
        }
    },
    "variables": {
        "location" : "[parameters('sublocation')]",
        "NetworkResourceGroup" : "[parameters('networkrg')]",
        "vnetId": "[resourceId(variables('NetworkResourceGroup'),'Microsoft.Network/virtualNetworks', variables('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', variables('subnetName'))]",
        "localAdminUserName" : "abl",
        "diagnosticsStorageAccountId" : "[parameters('diagnosticsStorageAccountId')]",
        "diagnosticsStorageAccountName": "[parameters('diagnosticstorage')]",
        "subnetName": "[parameters('subnet')]",
        "virtualNetworkName": "[parameters('virtualnetwork')]",
        "networkInterfaceName": "[concat(parameters('virtualMachineName'), '-IP-0')]",
        "availabilitySetPlatformFaultDomainCount": "3",
        "availabilitySetPlatformUpdateDomainCount": "3",
        "availabilitySetId": {
            "id": "[resourceId('Microsoft.Compute/availabilitySets', parameters('availabilitySetName'))]"
        },
        "vmname" : "[concat(parameters('virtualMachineName'), '-0')]"
    },
    "resources": [
        {
            "name": "[parameters('availabilitySetName')]",
            "condition": "[not(equals(parameters('availabilitySetName'), 'false'))]",
            "type": "Microsoft.Compute/availabilitySets",
            "apiVersion": "2016-04-30-preview",
            "location": "[variables('location')]",
            "properties": {
                "platformFaultDomainCount": "[variables('availabilitySetPlatformFaultDomainCount')]",
                "platformUpdateDomainCount": "[variables('availabilitySetPlatformUpdateDomainCount')]",
                "managed": true
            }
        },
        {
            "name": "[concat(variables('vmname'), copyIndex(1))]",
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2016-04-30-preview",
            "location": "[variables('location')]",
            "copy": {
                "name": "vmloop",
                "count": "[parameters('numberOfInstances')]",
                "mode": "Parallel"
            },
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', variables('networkInterfaceName'), copyIndex(1))]",
                "[concat('Microsoft.Compute/availabilitySets/', parameters('availabilitySetName'))]"
            ],
            "properties": {
                "osProfile": {
                    "computerName": "[concat(variables('vmname'), copyIndex(1))]",
                    "adminUsername": "[variables('localAdminUserName')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "RedHat",
                        "offer": "RHEL",
                        "sku": "7-RAW",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "[concat(variables('vmname'), copyIndex(1), '-OsDisk')]",
                        "createOption": "FromImage",
                        "diskSizeGB": 128,
                        "managedDisk": {
                            "storageAccountType": "Premium_LRS"
                        }
                    },
                    "dataDisks": []
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('networkInterfaceName'), copyIndex(1)))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true,
                        "storageUri": "[reference(resourceId(parameters('diagnosticstoragerg'), 'Microsoft.Storage/storageAccounts', parameters('diagnosticstorage')), '2015-06-15').primaryEndpoints['blob']]"
                    }
                },
                "availabilitySet": "[if(not(equals(parameters('availabilitySetName'), 'false')), variables('availabilitySetId'), json('null'))]"
            }
        },
        {
            "name": "[concat('microsoft.network-watcher-linux-2018021816052', copyIndex(1))]",
            "apiVersion": "2015-01-01",
            "type": "Microsoft.Resources/deployments",
            "copy" : {
                "name" : "watcherloop",
                "count": "[parameters('numberOfInstances')]",
                "mode": "Parallel"
            },
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "https://gallery.azure.com/artifact/20161101/microsoft.network-watcher-linux-arm.1.4.14/Artifacts/MainTemplate.json"
                },
                "parameters": {
                    "vmName": {
                        "value": "[concat(variables('vmname'), copyIndex(1))]"
                    },
                    "location": {
                        "value": "[resourceGroup().location]"
                    }
                }
            },
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines/', concat(variables('vmname'), copyIndex(1)))]"
                
            ]
        },
        {
            "name": "[concat(variables('networkInterfaceName'), copyIndex(1))]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2016-09-01",
            "location": "[variables('location')]",
            "copy": {
                "name": "NetworkILoop",
                "count": "[parameters('numberOfInstances')]",
                "mode": "Parallel"
            },
            "dependsOn": [],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic"
                        }
                    }
                ],
                "enableAcceleratedNetworking": true
            }
        }
    ],
    "outputs": {
        "localAdminUserName": {
            "type": "string",
            "value": "[parameters('sublocation')]"
        }
    }
}